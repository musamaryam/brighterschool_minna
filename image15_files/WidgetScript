(function(){var __webpack_modules__={5892:function(module){eval("/* eslint no-magic-numbers: [\"off\"] */\n// Use module.exports so that node can use this config\nmodule.exports = {\n  homeUrl: 'https://www.purechat.com',\n  apiUrl: 'https://api.purechat.com',\n  cdnUrl: 'https://prod.purechatcdn.com',\n  apiCdnServerUrl: 'https://api-cdn.purechat.com',\n  trackingOperatorApiUrl: 'https://tracking.purechat.com',\n  googleEmbedApiKey: 'AIzaSyBEorMC35CFuuH2caNZhAeFGRtqwbWE4Mc',\n  cdnServerUrl: 'https://prod.purechatcdn.com',\n  customerIoSiteId: 'd4a6e4df3666072e5b55',\n  dashboardRootUrl: 'https://app.purechat.com',\n  apiRootUrl: 'https://api.purechat.com',\n  widgetApiRootUrl: 'https://widgetapi.purechat.com',\n  filesRootUrl: 'https://files.purechat.com',\n  pingQueueUrl: 'https://checkin.purechat.com/api/checkin',\n  authCookieName: 'purechatAuthv5',\n  pidCookieName: 'prodvtftwPID',\n  pingInterval: 5000,\n  sessionTimeout: 1000 * 60 * 20,\n  // 20 minutes\n  recaptchaClientKey: '6LeJv-MUAAAAADCcAJn1EW3l5bMoqAxPfCO898oc'\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTg5Mi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL1NjcmlwdHMvY29uZmlnL2NvbmZpZy5wcm9kdWN0aW9uLmpzP2RmZDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IG5vLW1hZ2ljLW51bWJlcnM6IFtcIm9mZlwiXSAqL1xuLy8gVXNlIG1vZHVsZS5leHBvcnRzIHNvIHRoYXQgbm9kZSBjYW4gdXNlIHRoaXMgY29uZmlnXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaG9tZVVybDogJ2h0dHBzOi8vd3d3LnB1cmVjaGF0LmNvbScsXG4gIGFwaVVybDogJ2h0dHBzOi8vYXBpLnB1cmVjaGF0LmNvbScsXG4gIGNkblVybDogJ2h0dHBzOi8vcHJvZC5wdXJlY2hhdGNkbi5jb20nLFxuICBhcGlDZG5TZXJ2ZXJVcmw6ICdodHRwczovL2FwaS1jZG4ucHVyZWNoYXQuY29tJyxcbiAgdHJhY2tpbmdPcGVyYXRvckFwaVVybDogJ2h0dHBzOi8vdHJhY2tpbmcucHVyZWNoYXQuY29tJyxcbiAgZ29vZ2xlRW1iZWRBcGlLZXk6ICdBSXphU3lCRW9yTUMzNUNGdXVIMmNhTlpoQWVGR1J0cXdiV0U0TWMnLFxuICBjZG5TZXJ2ZXJVcmw6ICdodHRwczovL3Byb2QucHVyZWNoYXRjZG4uY29tJyxcbiAgY3VzdG9tZXJJb1NpdGVJZDogJ2Q0YTZlNGRmMzY2NjA3MmU1YjU1JyxcbiAgZGFzaGJvYXJkUm9vdFVybDogJ2h0dHBzOi8vYXBwLnB1cmVjaGF0LmNvbScsXG4gIGFwaVJvb3RVcmw6ICdodHRwczovL2FwaS5wdXJlY2hhdC5jb20nLFxuICB3aWRnZXRBcGlSb290VXJsOiAnaHR0cHM6Ly93aWRnZXRhcGkucHVyZWNoYXQuY29tJyxcbiAgZmlsZXNSb290VXJsOiAnaHR0cHM6Ly9maWxlcy5wdXJlY2hhdC5jb20nLFxuICBwaW5nUXVldWVVcmw6ICdodHRwczovL2NoZWNraW4ucHVyZWNoYXQuY29tL2FwaS9jaGVja2luJyxcbiAgYXV0aENvb2tpZU5hbWU6ICdwdXJlY2hhdEF1dGh2NScsXG4gIHBpZENvb2tpZU5hbWU6ICdwcm9kdnRmdHdQSUQnLFxuICBwaW5nSW50ZXJ2YWw6IDUwMDAsXG4gIHNlc3Npb25UaW1lb3V0OiAxMDAwICogNjAgKiAyMCxcbiAgLy8gMjAgbWludXRlc1xuICByZWNhcHRjaGFDbGllbnRLZXk6ICc2TGVKdi1NVUFBQUFBRENjQUpuMUVXM2w1Yk1vcUF4UGZDTzg5OG9jJ1xufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5892\n")},3453:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: ./Scripts/config/config.production.js\nvar config_production = __webpack_require__(5892);\nvar config_production_default = /*#__PURE__*/__webpack_require__.n(config_production);\n;// CONCATENATED MODULE: ./Scripts/widgets/shared/script_loader.js\nfunction loadScript(url, success, error) {\n  var script = document.createElement('script');\n  script.async = true;\n  script.type = 'text/javascript';\n\n  if (typeof url === 'string') {\n    script.src = url;\n  } else {\n    var scriptUrl = url.url,\n        sha = url.sha;\n    script.crossOrigin = 'anonymous';\n    script.integrity = sha;\n    script.src = scriptUrl;\n  }\n\n  var scriptReady = false;\n  if (error && typeof error === 'function') script.onerror = error;\n\n  function readyFn() {\n    if (!scriptReady && (!this.readyState || this.readyState === 'loaded' || this.readyState === 'complete')) {\n      scriptReady = true;\n      success(script);\n    }\n  }\n\n  script.onload = readyFn;\n  script.onreadystatechange = readyFn;\n  document.body.appendChild(script);\n}\n;// CONCATENATED MODULE: ./Scripts/widgets/shared/utils.js\n\nvar MODERN_STYLE_ID = 3;\nvar hasClass = function hasClass(el, className) {\n  return el.classList ? el.classList.contains(className) : !!el.className.match(new RegExp(\"(\\\\s|^)\".concat(className, \"(\\\\s|$)\")));\n};\nvar addClass = function addClass(el, className) {\n  if (el.classList) {\n    el.classList.add(className);\n  } else if (!hasClass(el, className)) {\n    el.className += \" \".concat(className); // eslint-disable-line no-param-reassign\n  }\n}; // eslint-disable-next-line import/prefer-default-export\n\nvar isModern = function isModern(settings) {\n  return (settings.StyleName || '').toLowerCase() === 'modern' || settings.StyleId === MODERN_STYLE_ID;\n};\nfunction domReady(fn) {\n  if (document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading') {\n    fn();\n  } else {\n    document.addEventListener('DOMContentLoaded', fn);\n  }\n}\nfunction redirectOnError(ex) {\n  if (ex.status === NOT_FOUND) {\n    window.location.href = '/404';\n  } else {\n    window.location.href = '/oops';\n  }\n}\nfunction getRequest(url, onSuccess, onError) {\n  var _this = this;\n\n  var request = new XMLHttpRequest();\n  request.open('GET', url, true);\n\n  request.onload = function onload() {\n    if (this.status >= OK && this.status < BAD_REQUEST) {\n      onSuccess(JSON.parse(this.response));\n    } else {\n      onError(this);\n    }\n  };\n\n  request.onerror = function () {\n    return onError(_this);\n  };\n\n  request.send();\n}\nfunction corsGet(url, onSuccess, onError) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', url);\n\n  xhr.onload = function getOnload() {\n    if (xhr.status === OK) {\n      var response = JSON.parse(xhr.responseText);\n      onSuccess(response);\n    } else {\n      onError();\n    }\n  };\n\n  xhr.send();\n}\n;// CONCATENATED MODULE: ./Scripts/widgets/loader/jsonp.js\nvar JSONP_TIMEOUT = 20000;\nvar jsonpTimeouts = {};\nvar callbackCounter = 0;\nfunction getJSONP(url, callback) {\n  var callbackNameOverride = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var callbackFnName = callbackNameOverride || \"_WidgetJPCB\".concat(callbackCounter); // Before, these global JSONP functions were deleted from the window when the script would\n  // load. Unfortunately due to Cloudflare's Rocket Wordpress plugin, it was calling the `onload`\n  // function before the script was applied to the page causing the wigdet to not load. This is\n  // a temporary fix to handle that until these requests can be made into CORS requests.\n\n  window[callbackFnName] = function windowCallback() {\n    callback.apply(void 0, arguments);\n\n    window[callbackFnName] = function () {};\n  };\n\n  var script = document.createElement('script');\n  script.setAttribute('data-cfasync', false);\n  script.setAttribute('async', true);\n  script.setAttribute('type', 'text/javascript');\n  callbackCounter += 1;\n  var src = url;\n  if (src.indexOf('?') < 0) src += '?_=_';\n  src += \"&callback=\".concat(callbackFnName);\n  var scriptReady = false;\n\n  function readyFn() {\n    if (!scriptReady && (!this.readyState || this.readyState === 'loaded' || this.readyState === 'complete')) {\n      scriptReady = true;\n      clearTimeout(jsonpTimeouts[\"JSONPTimeout\".concat(callbackFnName)]);\n      delete jsonpTimeouts[\"JSONPTimeout\".concat(callbackFnName)];\n    }\n  }\n\n  script.onload = readyFn;\n  script.onreadystatechange = readyFn;\n  if (window.location.search.indexOf('pcforcemobile') >= 0) src += '&forceMobile=true';\n  script.setAttribute('src', src);\n  document.getElementsByTagName('HEAD')[0].appendChild(script);\n  jsonpTimeouts[\"JSONPTimeout\".concat(callbackFnName)] = setTimeout(function () {\n    // If this is called, then the script never loaded\n    throw new Error('Pure Chat widget failed to load');\n  }, JSONP_TIMEOUT);\n}\n;// CONCATENATED MODULE: ./Scripts/widgets/loader/cors.js\nvar cors_OK = 200;\nfunction cors_corsGet(url, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', url);\n  xhr.withCredentials = true;\n\n  xhr.onload = function getOnload() {\n    if (xhr.status === cors_OK) {\n      var response = JSON.parse(xhr.responseText);\n      callback(response);\n    }\n  };\n\n  xhr.send();\n}\n;// CONCATENATED MODULE: ./Scripts/widgets/loader/main.js\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/* eslint-disable max-classes-per-file,  no-underscore-dangle, no-extend-native */\n\n\n\n\n // MooTools overrides the default bind function with a non-standard implementation\n// which breaks the widget. Put it back to something close to the ECMAScript version.\n// It is in the loader because webpack uses the bind method right away.\n// via https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\nvar mootoolsBind = null;\n\nif (window.MooTools) {\n  mootoolsBind = Function.prototype.bind;\n\n  Function.prototype.bind = function bind(context) {\n    if (typeof this !== 'function') throw new TypeError('Function.prototype.bind'); // eslint-disable-next-line prefer-rest-params\n\n    var args = Array.prototype.slice.call(arguments, 1);\n    var toBind = this;\n\n    var Noop = function Noop() {};\n\n    var bound = function bound() {\n      // eslint-disable-next-line no-invalid-this, prefer-rest-params\n      return toBind.apply(this instanceof Noop ? this : context, args.concat(Array.prototype.slice.call(arguments)));\n    };\n\n    if (this.prototype) Noop.prototype = this.prototype;\n    bound.prototype = new Noop();\n    return bound;\n  };\n} // This is to fix a `toString` issue that effects our widget from destroying people's sites. This\n// will be temporary until a fix in core-js is released.\n// https://github.com/zloirock/core-js/issues/289\n\n\ntry {\n  if (typeof Prototype !== 'undefined') {\n    // eslint-disable-next-line no-extend-native\n    Object.defineProperty(Array.prototype, Symbol.toStringTag, {\n      value: 'Array'\n    });\n  }\n} catch (ex) {\n  /* Do Nothing */\n} // Library Loader Functions\n// ----------------------------------------------------------------------------\n// These libraries are hard coded to the version they use. If for some reason,\n// one of these needs to be updated, make sure to update not only the CDN version,\n// but also go into the webpack config and make sure the fallback is getting pulled\n// in correctly.\n\n\nfunction loadjQuery(isRequired, success, error) {\n  if (!isRequired) return success();\n  return loadScript({\n    url: '//ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js',\n    sha: 'sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4='\n  }, success, function () {\n    return loadScript(\"\".concat((config_production_default()).cdnUrl, \"/assets/jquery.fallback.360.js\"), success, error);\n  });\n} // Class Objects\n// ----------------------------------------------------------------------------\n// This object acts as the conduit for the JavaScript API that customers can use.\n// That way we don't expose the entire API object to them.\n\n\nvar PublicApi = /*#__PURE__*/function () {\n  function PublicApi(pcWidget) {\n    _classCallCheck(this, PublicApi);\n\n    this.api = pcWidget.getPublicApi();\n  }\n\n  _createClass(PublicApi, [{\n    key: \"on\",\n    value: function on() {\n      var _this$api;\n\n      return (_this$api = this.api).on.apply(_this$api, arguments);\n    }\n  }, {\n    key: \"off\",\n    value: function off() {\n      var _this$api2;\n\n      return (_this$api2 = this.api).off.apply(_this$api2, arguments);\n    }\n  }, {\n    key: \"action\",\n    value: function action() {\n      var _this$api3;\n\n      return (_this$api3 = this.api).action.apply(_this$api3, arguments);\n    }\n  }, {\n    key: \"set\",\n    value: function set() {\n      var _this$api4;\n\n      return (_this$api4 = this.api).set.apply(_this$api4, arguments);\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      var _this$api5;\n\n      return (_this$api5 = this.api).get.apply(_this$api5, arguments);\n    }\n  }]);\n\n  return PublicApi;\n}(); // Main PCWidget class that acts as the starter for the widget. Also exposes,\n// the base API for calling methods on the widget instance itself.\n\n\nvar PCWidget = /*#__PURE__*/function () {\n  function PCWidget() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, PCWidget);\n\n    // This is simply treated as a passthrough for the widget loader\n    var mappedArgs = Object.keys(options).map(function (key) {\n      return key.toLowerCase().trim();\n    }).reduce(function (obj, key) {\n      return {\n        c: _objectSpread(_objectSpread({}, obj), {}, {\n          widgetId: options[key]\n        }),\n        o: _objectSpread(_objectSpread({}, obj), {}, {\n          overrideWidgetId: options[key]\n        }),\n        pureserverurl: _objectSpread(_objectSpread({}, obj), {}, {\n          pureServerUrl: options[key]\n        }),\n        chatserverurl: _objectSpread(_objectSpread({}, obj), {}, {\n          chatServerUrl: options[key]\n        }),\n        f: _objectSpread(_objectSpread({}, obj), {}, {\n          isWidget: options[key]\n        })\n      }[key];\n    }, {});\n\n    var init = function init() {\n      var id = mappedArgs.overrideWidgetId || mappedArgs.widgetId; // Make the first request to grab the widget version settings. This will say if the widget is disabled or\n      // deleted. Also checks to make sure they haven't hit their chat quota.\n\n      cors_corsGet(\"\".concat((config_production_default()).widgetApiRootUrl, \"/api/visitorwidget/widgetversions/\").concat(id), function (versionResponse) {\n        var settings = _objectSpread(_objectSpread({}, mappedArgs), _this.mapWidgetVersionSettings(versionResponse));\n\n        if (settings.QuotaExceeded || settings.Stop) return false; // Make the request for the rest of the widget settings. One last check on the domain settings before loading\n        // the rest of the widget.\n\n        return cors_corsGet(\"\".concat((config_production_default()).apiCdnServerUrl, \"/api/visitorwidget/widget/\").concat(id, \"/\").concat(settings.WidgetVersion), function (settingsResponse) {\n          settings = _objectSpread(_objectSpread({}, settingsResponse), settings);\n          if (!_this.isAllowedDomain(settings.AllowedDomains)) return false; // Check style to see if we need to load the modern widget or the legacy one.\n\n          var isLegacy = !isModern(settings); // Load jquery from a CDN. This is the only library loaded from a CDN since it seems to handle require.js\n          // environments than the other libraries we use, and the liklihood of someone having this version of jQuery\n          // already cached by there browser is fairly high.\n\n          return loadjQuery(isLegacy, function () {\n            if (isLegacy) window.pc$ = window.jQuery.noConflict(true); // Load the last script that tells the loader which version of the widget-script to load. This has a version number in it\n            // as well in case that is needed for anything down the line.\n\n            getJSONP(\"\".concat((config_production_default()).dashboardRootUrl, \"/version\"), function (response) {\n              var widgetScript = isLegacy ? response.assets['widget-script.js'] || response.assets['widgetScript.js'] || response.assets['legacy.js'] : response.assets['modern.js'];\n              var url = \"\".concat((config_production_default()).cdnUrl).concat(widgetScript); // Lastly, load the widget script the version file said to load.\n\n              loadScript(url, function () {\n                if (window._pcwi) delete window._pcwi;\n                var initializer = window._pcWidgetInitializer;\n\n                if (!initializer) {\n                  console.log('Pure Chat Widget failed to load'); // eslint-disable-line no-console\n\n                  return;\n                }\n\n                initializer.start(settings, function (widget) {\n                  _this.widget = widget;\n\n                  if (window.purechatApi && isLegacy) {\n                    var _window$purechatApi = window.purechatApi,\n                        l = _window$purechatApi.l,\n                        t = _window$purechatApi.t;\n                    window.purechatApi = new PublicApi(widget);\n                    l.forEach(function (next) {\n                      return window.purechatApi.on.apply(window.purechatApi, next);\n                    });\n                    t.forEach(function (next) {\n                      return window.purechatApi.action.apply(window.purechatApi, next);\n                    });\n                  } // Put back Mootools function bind back so that other scripts go back to working\n\n\n                  if (window.MooTools && mootoolsBind !== null) Function.prototype.bind = mootoolsBind;\n                });\n              }, function () {\n                return console.log('Failed to load widget script');\n              }); // eslint-disable-line no-console\n            }, '_WidgetJPCB_Version');\n          }, function () {\n            return console.log('Libraries failed to load');\n          }); // eslint-disable-line no-console\n        }, '_WidgetJPCB_WidgetSettings');\n      }, '_WidgetJPCB_WidgetVersions');\n    }; // Wait until everything on the page has loaded before loading up PureChat\n\n\n    if (document.readyState === 'complete') {\n      setTimeout(init, 0);\n    } else if (window.addEventListener) {\n      window.addEventListener('load', init, false);\n    } else if (window.attachEvent) {\n      window.attachEvent('onload', init);\n    } else {\n      window.onload = init;\n    }\n  }\n\n  _createClass(PCWidget, [{\n    key: \"mapWidgetVersionSettings\",\n    value: function mapWidgetVersionSettings() {\n      var response = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return Object.keys(response).map(function (key) {\n        return key.toLowerCase().trim();\n      }).reduce(function (obj, key) {\n        return {\n          v: _objectSpread(_objectSpread({}, obj), {}, {\n            Valid: response[key] === true || response[key] === 1\n          }),\n          wv: _objectSpread(_objectSpread({}, obj), {}, {\n            WidgetVersion: response[key]\n          }),\n          csu: _objectSpread(_objectSpread({}, obj), {}, {\n            ChatServerUrl: response[key]\n          }),\n          csv: _objectSpread(_objectSpread({}, obj), {}, {\n            ChatServerVersion: response[key]\n          }),\n          sru: _objectSpread(_objectSpread({}, obj), {}, {\n            SiteRootUrl: response[key]\n          }),\n          dap: _objectSpread(_objectSpread({}, obj), {}, {\n            DisableAvailabilityPings: response[key] === true || response[key] === 1\n          }),\n          ip: _objectSpread(_objectSpread({}, obj), {}, {\n            VisitorIPAddress: response[key]\n          }),\n          rfm: _objectSpread(_objectSpread({}, obj), {}, {\n            RequestFromMobileDevice: response[key] === true || response[key] === 1\n          }),\n          b: _objectSpread(_objectSpread({}, obj), {}, {\n            IPIsBanned: response[key] === true || response[key] === 1\n          }),\n          cru: _objectSpread(_objectSpread({}, obj), {}, {\n            CdnRootUrl: response[key]\n          }),\n          acru: _objectSpread(_objectSpread({}, obj), {}, {\n            ApiCdnRootUrl: response[key]\n          }),\n          id: _objectSpread(_objectSpread({}, obj), {}, {\n            Id: response[key]\n          }),\n          s: _objectSpread(_objectSpread({}, obj), {}, {\n            Stop: response[key] === true || response[key] === 1\n          }),\n          qe: _objectSpread(_objectSpread({}, obj), {}, {\n            QuotaExceeded: response[key] === true || response[key] === 1\n          })\n        }[key] || obj;\n      }, response);\n    }\n  }, {\n    key: \"isAllowedDomain\",\n    value: function isAllowedDomain() {\n      var allowedDomains = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      // No domains mean widget is set to \"All Domains\"\n      if (allowedDomains.length === 0) return true;\n      allowedDomains.push('purechat.com');\n      return allowedDomains.some(function (domain) {\n        return /^\\*$/.test(domain) || document.domain.search(domain) !== -1;\n      });\n    }\n  }, {\n    key: \"publicApi\",\n    get: function get() {\n      return this.widget ? this.widget.getPublicApi() : null;\n    }\n  }, {\n    key: \"set\",\n    value: function set() {\n      var _this$publicApi;\n\n      if (this.publicApi) (_this$publicApi = this.publicApi).set.apply(_this$publicApi, arguments);\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      var _this$publicApi2;\n\n      if (this.publicApi) (_this$publicApi2 = this.publicApi).get.apply(_this$publicApi2, arguments);\n    }\n  }, {\n    key: \"on\",\n    value: function on() {\n      var _this$publicApi3;\n\n      if (this.publicApi) (_this$publicApi3 = this.publicApi).on.apply(_this$publicApi3, arguments);\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger() {\n      var _this$publicApi4;\n\n      if (this.publicApi) (_this$publicApi4 = this.publicApi).trigger.apply(_this$publicApi4, arguments);\n    }\n  }]);\n\n  return PCWidget;\n}();\n\nwindow.PCWidget = PCWidget;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3453\n")}},__webpack_module_cache__={};function __webpack_require__(c){var n=__webpack_module_cache__[c];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[c]={exports:{}};return __webpack_modules__[c](t,t.exports,__webpack_require__),t.exports}__webpack_require__.n=function(c){var n=c&&c.__esModule?function(){return c.default}:function(){return c};return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=function(c,n){for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(c,t)&&Object.defineProperty(c,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=function(c,n){return Object.prototype.hasOwnProperty.call(c,n)};var __webpack_exports__=__webpack_require__(3453)})();